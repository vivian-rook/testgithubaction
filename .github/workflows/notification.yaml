---

name: "PR Notification"

'on':
  pull_request:
    types: [opened, closed]

jobs:
#  printJob:    
#    name: Print event
#    runs-on: ubuntu-latest
#    steps:
#    - name: Dump GitHub context
#      env:
#        GITHUB_CONTEXT: ${{ toJson(github) }}
#      run: |
#        echo "$GITHUB_CONTEXT"
#  irc-notification:
#    runs-on: ubuntu-latest
#    name: Notify on IRC
#    steps:
#      - name: irc notification
#        run: |
#          sudo apt-get update
#          sudo apt-get install netcat -y
#          message="${{ github.actor }} ${{ github.event.action }} ${{ github.event.pull_request._links.html.href }}"
#          echo -e "USER notefromgithub notefromgithub notefromgithub :notefromgithub\nNICK notefromgithub\nJOIN #wikimedia-cloud-feed\nPRIVMSG #wikimedia-cloud-feed :${message}\nQUIT\n" | nc irc.libera.chat 6667
  phabricator-comment:
    runs-on: ubuntu-latest
    name: Comment on Phabricator
    steps:
      - uses: actions/checkout@v2
      - name: generate message
        run: |
          message="${{ github.actor }} ${{ github.event.action }} ${{ github.event.pull_request._links.html.href }}"
          echo "${message}"
          git fetch

          echo ${{ github.event.pull_request._links.commits.href }} 
          initial_commit=$(curl ${{ github.event.pull_request._links.commits.href }} | jq .[0].commit.message -r | grep "^Bug: T[0-9]*$" | head -1 | awk '{print $2}')
          #initial_commit=$(curl ${{ github.event.pull_request._links.commits.href }} | jq .[0].commit.message -r)
          #initial_commit=$(curl ${{ github.event.pull_request._links.commits.href }} | grep data-url | grep /commits_list_item | head -1 | awk -F/ '{print $5}')
          #task=$(git log -n 1 ${initial_commit} | grep "^    Bug: T[0-9]*$" | head -1 | awk '{print $2}')
          #task=$(git log origin/main..origin/${{ github.head_ref }} | tail -n1 | grep "^    Bug: T[0-9]*$" | awk '{print $2}')
          #echo 1
          #if [ -z "${task}" ]; then
          #  echo 2
          #  commit=$(git log --grep='#(${{ github.event.number }})')
          #  commits=$(echo $commit | grep ^commit | wc -l)
          #  # this test is not perfect, as potentially someone could put a (#<number>) string that matches
          #  # The test below should avoid false positives
          #  # The code could be improved by explicitly looking at the fifth line of the resulting commits
          #  if [ "${commits}" -gt 1 ]; then
          #    echo "more than 1 commit found, something is strange."
          #    exit 1
          #  elif [ "${commits}" -lt 1 ]; then
          #    echo "less than 1 commit found, something is strange."
          #    exit 1
          #  fi
          #  task=$(echo ${commit} | grep "^    Bug: T[0-9]*$" | head -1 | awk '{print $2}')
          #fi
          #if [ -n "${task}" ]; then
          #  curl https://phabricator.wikimedia.org/api/maniphest.edit \
          #      -d api.token=${{ secrets.TOOLFORGE_PHAB_BOT_KEY }} \
          #      -d transactions[0][type]=comment \
          #      -d transactions[0][value]="${message}" \
          #      -d objectIdentifier=${task}
          #fi
          echo "task: ${task} message: ${message}"
