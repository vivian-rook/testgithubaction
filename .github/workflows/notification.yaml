---

name: "PR Notification"

'on':
  pull_request:
#    types: [opened, closed]

jobs:
  printJob:    
    name: Print event
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
#  irc-notification:
#    runs-on: ubuntu-latest
#    name: Notify on IRC
#    steps:
#      - name: irc notification
#        run: |
#          sudo apt-get update
#          sudo apt-get install netcat -y
#          message="${{ github.actor }} ${{ github.event.action }} ${{ github.event.pull_request._links.html.href }}"
#          echo -e "USER notefromgithub notefromgithub notefromgithub :notefromgithub\nNICK notefromgithub\nJOIN #wikimedia-cloud-feed\nPRIVMSG #wikimedia-cloud-feed :${message}\nQUIT\n" | nc irc.libera.chat 6667
  phabricator-comment:
    runs-on: ubuntu-latest
    name: Comment on Phabricator
    steps:
      - uses: actions/checkout@v2
      - name: generate message
        run: |
          message="${{ github.actor }} ${{ github.event.action }} ${{ github.event.pull_request._links.html.href }}"
          echo "${message}"
      - name: git fetch
        run: git fetch
      - name: get task id on open
        run: |
          echo "on open"
          #inital_commit=$(git log origin/main..origin/${{ github.head_ref }} --pretty=%H | tail -n1)
          #task=$(git log -n 1 ${inital_commit} | tail -n1 | grep "^    Bug: T[0-9]*$" | awk '{print $2}')
          task=$(git log origin/main..origin/${{ github.head_ref }} | tail -n1 | grep "^    Bug: T[0-9]*$" | awk '{print $2}')
          #git log origin/main..origin/${{ github.head_ref }} 
          #echo "$task done ${{ github.head_ref }}"
          #echo "$task and $inital_commit done"
          #echo "head ref ${{ github.head_ref }}"
          # if already squashed and merged use the branch name.
          #if [ -z "${task}" ]; then
          #  task=$(git log -n 1 origin/${{ github.head_ref }} | tail -n1 | grep "^    Bug: T[0-9]*$" | awk '{print $2}')
          #fi
          #if [ -n "${task}" ]; then
          #  curl https://phabricator.wikimedia.org/api/maniphest.edit \
          #      -d api.token=${{ secrets.TOOLFORGE_PHAB_BOT_KEY }} \
          #      -d transactions[0][type]=comment \
          #      -d transactions[0][value]="${message}" \
          #      -d objectIdentifier=${task}
          #fi
        if: github.event.action == 'opened' 
      - name: get task id on close
        run: |
          task=$(git log --grep='#(${{ github.event.number }})' | grep "^    Bug: T[0-9]*$" | head -1 | awk '{print $2}')
        #if: github.event.action == 'closed'
      - name: comment on phabricator
        run: |
          echo "task: ${taxk} message: ${message}
